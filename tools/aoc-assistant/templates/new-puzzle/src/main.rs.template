use aoc_utils::cli_utils::\{create_cli, solve_part\};

fn main() \{
    let cli = create_cli({ year }, { day });

    let cli_matches = cli.get_matches();
    let part: &u8 = cli_matches.get_one("part").unwrap();
    match part \{
        1 => \{
            solve_part(1, || \{
                aoc_{ year }_{ long_day }::solve_part1(aoc_{ year }_{ long_day }::Part1Parameters \{
                    input_data: include_str!("../data/input/input.txt"),
                \})
            \});
        \}
        2 => \{
            solve_part(2, || \{
                aoc_{ year }_{ long_day }::solve_part2(aoc_{ year }_{ long_day }::Part2Parameters \{
                    input_data: include_str!("../data/input/input.txt"),
                \})
            \});
        \}
        _ => unreachable!("Exhausted list of subcommands and subcommand_required prevents `None`"),
    \}
\}
